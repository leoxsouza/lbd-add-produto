package com.leonardo.domain;

import com.leonardo.domain.enums.OrderStatusEnum;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.*;

import java.time.Instant;
import java.util.List;

@DynamoDbBean
public class Order {

    public static final String STATUS_TIMESTAMP_INDEX = "StatusTimestampIndex";
    public static final String TABLE_NAME = "Orders";

    private Integer orderId;
    private Instant timestamp;
    private List<Item> items;
    private OrderStatusEnum status;
    private Double total;
    private String observation;

    @DynamoDbPartitionKey
    @DynamoDbAttribute("orderId")
    public Integer getOrderId() {
        return orderId;
    }

    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

    @DynamoDbAttribute("timestamp")
    @DynamoDbSecondarySortKey(indexNames = {STATUS_TIMESTAMP_INDEX})
    @DynamoDbAutoGeneratedTimestampAttribute
    public Instant getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(Instant timestamp) {
        this.timestamp = timestamp;
    }

    @DynamoDbAttribute("status")
    @DynamoDbSecondaryPartitionKey(indexNames = {STATUS_TIMESTAMP_INDEX})
    public OrderStatusEnum getStatus() {
        return status;
    }

    public void setStatus(OrderStatusEnum status) {
        this.status = status;
    }

    @DynamoDbAttribute("items")
    public List<Item> getItems() {
        return items;
    }

    public void setItems(List<Item> items) {
        this.items = items;
    }

    @DynamoDbAttribute("total")
    public Double getTotal() {
        return total;
    }

    public void setTotal(Double total) {
        this.total = total;
    }

    @DynamoDbAttribute("observation")
    public String getObservation() {
        return observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Override
    public String toString() {
        return "Order{" +
                "orderId='" + orderId + '\'' +
                ", items=" + items +
                ", status='" + status + '\'' +
                ", total=" + total +
                ", timestamp='" + timestamp + '\'' +
                ", observation='" + observation + '\'' +
                '}';
    }
}
